{"remainingRequest":"/home/sebastian/Documentos/inspection2drone/DjInspection2drone/front/node_modules/babel-loader/lib/index.js!/home/sebastian/Documentos/inspection2drone/DjInspection2drone/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/sebastian/Documentos/inspection2drone/DjInspection2drone/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sebastian/Documentos/inspection2drone/DjInspection2drone/front/src/components/SidebarPlugin/SideBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sebastian/Documentos/inspection2drone/DjInspection2drone/front/src/components/SidebarPlugin/SideBar.vue","mtime":1566125532000},{"path":"/home/sebastian/Documentos/inspection2drone/DjInspection2drone/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sebastian/Documentos/inspection2drone/DjInspection2drone/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/sebastian/Documentos/inspection2drone/DjInspection2drone/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sebastian/Documentos/inspection2drone/DjInspection2drone/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MovingArrow from \"./MovingArrow.vue\";\nimport SidebarLink from \"./SidebarLink\";\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: \"Paper Dashboard\"\n    },\n    backgroundColor: {\n      type: String,\n      default: \"black\",\n      validator: value => {\n        let acceptedValues = [\"white\", \"black\", \"darkblue\"];\n        return acceptedValues.indexOf(value) !== -1;\n      }\n    },\n    activeColor: {\n      type: String,\n      default: \"success\",\n      validator: value => {\n        let acceptedValues = [\"primary\", \"info\", \"success\", \"warning\", \"danger\"];\n        return acceptedValues.indexOf(value) !== -1;\n      }\n    },\n    sidebarLinks: {\n      type: Array,\n      default: () => []\n    },\n    autoClose: {\n      type: Boolean,\n      default: true\n    }\n  },\n\n  provide() {\n    return {\n      autoClose: this.autoClose,\n      addLink: this.addLink,\n      removeLink: this.removeLink\n    };\n  },\n\n  components: {\n    MovingArrow,\n    SidebarLink\n  },\n  computed: {\n    /**\n     * Styles to animate the arrow near the current active sidebar link\n     * @returns {{transform: string}}\n     */\n    arrowMovePx() {\n      return this.linkHeight * this.activeLinkIndex;\n    }\n\n  },\n\n  data() {\n    return {\n      linkHeight: 65,\n      activeLinkIndex: 0,\n      windowWidth: 0,\n      isWindows: false,\n      hasAutoHeight: false,\n      links: []\n    };\n  },\n\n  methods: {\n    findActiveLink() {\n      this.links.forEach((link, index) => {\n        if (link.isActive()) {\n          this.activeLinkIndex = index;\n        }\n      });\n    },\n\n    addLink(link) {\n      const index = this.$slots.links.indexOf(link.$vnode);\n      this.links.splice(index, 0, link);\n    },\n\n    removeLink(link) {\n      const index = this.links.indexOf(link);\n\n      if (index > -1) {\n        this.links.splice(index, 1);\n      }\n    }\n\n  },\n\n  mounted() {\n    this.$watch(\"$route\", this.findActiveLink, {\n      immediate: true\n    });\n  }\n\n};",{"version":3,"sources":["SideBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,OAAA,WAAA,MAAA,mBAAA;AACA,OAAA,WAAA,MAAA,eAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,OAFA;AAGA,MAAA,SAAA,EAAA,KAAA,IAAA;AACA,YAAA,cAAA,GAAA,CAAA,OAAA,EAAA,OAAA,EAAA,UAAA,CAAA;AACA,eAAA,cAAA,CAAA,OAAA,CAAA,KAAA,MAAA,CAAA,CAAA;AACA;AANA,KALA;AAaA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,SAFA;AAGA,MAAA,SAAA,EAAA,KAAA,IAAA;AACA,YAAA,cAAA,GAAA,CACA,SADA,EAEA,MAFA,EAGA,SAHA,EAIA,SAJA,EAKA,QALA,CAAA;AAOA,eAAA,cAAA,CAAA,OAAA,CAAA,KAAA,MAAA,CAAA,CAAA;AACA;AAZA,KAbA;AA2BA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,MAAA;AAFA,KA3BA;AA+BA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AA/BA,GADA;;AAqCA,EAAA,OAAA,GAAA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,KAAA,SADA;AAEA,MAAA,OAAA,EAAA,KAAA,OAFA;AAGA,MAAA,UAAA,EAAA,KAAA;AAHA,KAAA;AAKA,GA3CA;;AA4CA,EAAA,UAAA,EAAA;AACA,IAAA,WADA;AAEA,IAAA;AAFA,GA5CA;AAgDA,EAAA,QAAA,EAAA;AACA;;;;AAIA,IAAA,WAAA,GAAA;AACA,aAAA,KAAA,UAAA,GAAA,KAAA,eAAA;AACA;;AAPA,GAhDA;;AAyDA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,eAAA,EAAA,CAFA;AAGA,MAAA,WAAA,EAAA,CAHA;AAIA,MAAA,SAAA,EAAA,KAJA;AAKA,MAAA,aAAA,EAAA,KALA;AAMA,MAAA,KAAA,EAAA;AANA,KAAA;AAQA,GAlEA;;AAmEA,EAAA,OAAA,EAAA;AACA,IAAA,cAAA,GAAA;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,CAAA,IAAA,EAAA,KAAA,KAAA;AACA,YAAA,IAAA,CAAA,QAAA,EAAA,EAAA;AACA,eAAA,eAAA,GAAA,KAAA;AACA;AACA,OAJA;AAKA,KAPA;;AAQA,IAAA,OAAA,CAAA,IAAA,EAAA;AACA,YAAA,KAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,MAAA,CAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,EAAA,IAAA;AACA,KAXA;;AAYA,IAAA,UAAA,CAAA,IAAA,EAAA;AACA,YAAA,KAAA,GAAA,KAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,EAAA;AACA,aAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA;AACA;;AAjBA,GAnEA;;AAsFA,EAAA,OAAA,GAAA;AACA,SAAA,MAAA,CAAA,QAAA,EAAA,KAAA,cAAA,EAAA;AACA,MAAA,SAAA,EAAA;AADA,KAAA;AAGA;;AA1FA,CAAA","sourcesContent":["<template>\n  <div class=\"sidebar\"\n       :data-background-color=\"backgroundColor\"\n       :data-active-color=\"activeColor\">\n    <!--\n            Tip 1: you can change the color of the sidebar's background using: data-background-color=\"white | black | darkblue\"\n            Tip 2: you can change the color of the active button using the data-active-color=\"primary | info | success | warning | danger\"\n        -->\n    <!-- -->\n    <div class=\"sidebar-wrapper\" id=\"style-3\">\n      <div class=\"logo\">\n        <a href=\"#\" class=\"simple-text\">\n            <div class=\"logo-img\">\n                <img src=\"@/assets/img/vue-logo.png\" alt=\"\">\n            </div>\n          {{title}}\n        </a>\n      </div>\n      <slot>\n\n      </slot>\n      <ul class=\"nav\">\n        <!--By default vue-router adds an active class to each route link. This way the links are colored when clicked-->\n        <slot name=\"links\">\n          <sidebar-link v-for=\"(link,index) in sidebarLinks\"\n                        :key=\"index\"\n                        :to=\"link.path\"\n                        :name=\"link.name\"\n                        :icon=\"link.icon\">\n          </sidebar-link>\n        </slot>\n      </ul>\n      <moving-arrow :move-y=\"arrowMovePx\">\n\n      </moving-arrow>\n    </div>\n  </div>\n</template>\n<script>\nimport MovingArrow from \"./MovingArrow.vue\";\nimport SidebarLink from \"./SidebarLink\";\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: \"Paper Dashboard\"\n    },\n    backgroundColor: {\n      type: String,\n      default: \"black\",\n      validator: value => {\n        let acceptedValues = [\"white\", \"black\", \"darkblue\"];\n        return acceptedValues.indexOf(value) !== -1;\n      }\n    },\n    activeColor: {\n      type: String,\n      default: \"success\",\n      validator: value => {\n        let acceptedValues = [\n          \"primary\",\n          \"info\",\n          \"success\",\n          \"warning\",\n          \"danger\"\n        ];\n        return acceptedValues.indexOf(value) !== -1;\n      }\n    },\n    sidebarLinks: {\n      type: Array,\n      default: () => []\n    },\n    autoClose: {\n      type: Boolean,\n      default: true\n    }\n  },\n  provide() {\n    return {\n      autoClose: this.autoClose,\n      addLink: this.addLink,\n      removeLink: this.removeLink\n    };\n  },\n  components: {\n    MovingArrow,\n    SidebarLink\n  },\n  computed: {\n    /**\n     * Styles to animate the arrow near the current active sidebar link\n     * @returns {{transform: string}}\n     */\n    arrowMovePx() {\n      return this.linkHeight * this.activeLinkIndex;\n    }\n  },\n  data() {\n    return {\n      linkHeight: 65,\n      activeLinkIndex: 0,\n      windowWidth: 0,\n      isWindows: false,\n      hasAutoHeight: false,\n      links: []\n    };\n  },\n  methods: {\n    findActiveLink() {\n      this.links.forEach((link, index) => {\n        if (link.isActive()) {\n          this.activeLinkIndex = index;\n        }\n      });\n    },\n    addLink(link) {\n      const index = this.$slots.links.indexOf(link.$vnode);\n      this.links.splice(index, 0, link);\n    },\n    removeLink(link) {\n      const index = this.links.indexOf(link);\n      if (index > -1) {\n        this.links.splice(index, 1);\n      }\n    }\n  },\n  mounted() {\n    this.$watch(\"$route\", this.findActiveLink, {\n      immediate: true\n    });\n  }\n};\n</script>\n<style>\n</style>\n"],"sourceRoot":"src/components/SidebarPlugin"}]}